# Don't show our server version and whatever
server_tokens off;

# Always upgrade to HTTPS for all services.
#server {
#        listen 80 default_server;
#        listen [::]:80 default_server;
#        server_name intellivoid.net staff.intellivoid.net accounts.intellivoid.net api.intellivoid.net coffeehouse.intellivoid.net openblu.intellivoid.net docs.intellivoid.net;

	# Certbot challenges
#	location ^~ /.well-known/acme-challenge/ {
#		root /var/www/letsencrypt;
#	}

#        return 301 https://$host$request_uri;
#}

server {
        # Support http2 (SPDY) and http3 (QUIC) both on IPv4 and IPv6 with SSL ofc.
	listen 80 default_server;
	listen [::]:80 default_server;
        #listen 443 ssl http2;
        #listen 443 http3 reuseport;
        #listen [::]:443 ssl http2;
        #listen [::]:443 http3 reuseport;

        # Server we're listening for
        server_name intellivoid.net staff.intellivoid.net accounts.intellivoid.net api.intellivoid.net coffeehouse.intellivoid.net openblu.intellivoid.net docs.intellivoid.net;

        # Error logs
        access_log /var/log/nginx/intellivoid.access.log main;
        error_log /var/log/nginx/intellivoid.error.log; #debug;

        # Advertise that HTTP/3 is available
        #add_header Alt-Svc 'h3=":443"';
        #add_header QUIC-Status $quic;

        #ssl_certificate /etc/letsencrypt/live/intellivoid.net/fullchain.pem;
        #ssl_certificate_key /etc/letsencrypt/live/intellivoid.net/privkey.pem;
        #ssl_session_timeout 1d;
        #ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        #ssl_session_tickets off;

        # modern configuration
        #ssl_protocols TLSv1.3; ## QUIC requires TLSv1.3.
        #ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        #add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        #ssl_stapling on;
        #ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        # https://github.com/certbot/certbot/issues/5099
        #ssl_trusted_certificate  /etc/letsencrypt/live/intellivoid.net/chain.pem;

        # replace with the IP address of your resolver
        #resolver 172.98.193.62;

        # Enable compression
        gzip on;
        gzip_types text/plain application/xml text/css text/xml text/javascript application/x-javascript;
        gzip_disable "MSIE [1-6]\.";
        gzip_proxied expired no-cache no-store private auth;

        # Actual server configuration
        ##############################
        root /var/www/$http_host/;
        index src/index.php;

        # Deny *ALL* dotfiles/dotfolders
        location ~ /\. {
                deny all;
                return 404;
        }

        # Always deny resources folder
        location ^~ /resources {
                deny all;
                return 404;
        }

        # Default try rule
        location / {
                try_files $uri $uri/ /index.php?$args /src/$uri /src/index.php?$args /src/$uri /src/index.php?$args;
        }

        # Handle loading of PHP files
        location ~ index.php$ {
        #location = /src/index.php {
                try_files $uri /src/$uri;
                include fastcgi_params;
                #fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_intercept_errors on;
                fastcgi_pass php-fpm;
        }

        # Set cache on static assets
        #location ~* \.(js|css|png|jpg|jpeg|gif|ico|txt)$ {
        #       expires max;
        #       log_not_found off;
        #}
}

